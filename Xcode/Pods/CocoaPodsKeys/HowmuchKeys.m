//
// Generated by CocoaPods-Keys
// on 01/10/2015
// For more information see https://github.com/orta/cocoapods-keys
//

#import <objc/runtime.h>
#import <Foundation/NSDictionary.h>
#import "HowmuchKeys.h"

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wincomplete-implementation"

@implementation HowmuchKeys

#pragma clang diagnostic pop

+ (BOOL)resolveInstanceMethod:(SEL)name
{
  NSString *key = NSStringFromSelector(name);
  NSString * (*implementation)(HowmuchKeys *, SEL) = NULL;

  if ([key isEqualToString:@"twitterConsumerKey"]) {
    implementation = _podKeysda5f4adf813943c250dc9473bc6726bc;
  }

  if ([key isEqualToString:@"twitterConsumerSecret"]) {
    implementation = _podKeys6739d252138def69343d23b2b0978100;
  }

  if ([key isEqualToString:@"parseClientId"]) {
    implementation = _podKeys0fcbb5923e8e5224dc221ace153706d0;
  }

  if ([key isEqualToString:@"parseClientKey"]) {
    implementation = _podKeys89ea18077626ea9c967643acff3abc36;
  }

  if (!implementation) {
    return [super resolveInstanceMethod:name];
  }

  return class_addMethod([self class], name, (IMP)implementation, "@@:");
}

static NSString *_podKeysda5f4adf813943c250dc9473bc6726bc(HowmuchKeys *self, SEL _cmd)
{
  
    
      char cString[26] = { HowmuchKeysData[1543], HowmuchKeysData[4111], HowmuchKeysData[2979], HowmuchKeysData[2557], HowmuchKeysData[2423], HowmuchKeysData[1513], HowmuchKeysData[4052], HowmuchKeysData[1143], HowmuchKeysData[234], HowmuchKeysData[2175], HowmuchKeysData[3473], HowmuchKeysData[4174], HowmuchKeysData[2764], HowmuchKeysData[4014], HowmuchKeysData[4104], HowmuchKeysData[1603], HowmuchKeysData[661], HowmuchKeysData[214], HowmuchKeysData[294], HowmuchKeysData[3674], HowmuchKeysData[1135], HowmuchKeysData[2407], HowmuchKeysData[3354], HowmuchKeysData[396], HowmuchKeysData[391], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys6739d252138def69343d23b2b0978100(HowmuchKeys *self, SEL _cmd)
{
  
    
      char cString[51] = { HowmuchKeysData[4227], HowmuchKeysData[2767], HowmuchKeysData[3104], HowmuchKeysData[705], HowmuchKeysData[3119], HowmuchKeysData[2791], HowmuchKeysData[3467], HowmuchKeysData[3150], HowmuchKeysData[990], HowmuchKeysData[973], HowmuchKeysData[2552], HowmuchKeysData[4045], HowmuchKeysData[1288], HowmuchKeysData[3429], HowmuchKeysData[3876], HowmuchKeysData[1883], HowmuchKeysData[843], HowmuchKeysData[879], HowmuchKeysData[2560], HowmuchKeysData[975], HowmuchKeysData[3544], HowmuchKeysData[4192], HowmuchKeysData[1164], HowmuchKeysData[1829], HowmuchKeysData[2194], HowmuchKeysData[2991], HowmuchKeysData[1764], HowmuchKeysData[258], HowmuchKeysData[3335], HowmuchKeysData[96], HowmuchKeysData[1000], HowmuchKeysData[1404], HowmuchKeysData[633], HowmuchKeysData[1906], HowmuchKeysData[1233], HowmuchKeysData[1212], HowmuchKeysData[3327], HowmuchKeysData[2352], HowmuchKeysData[484], HowmuchKeysData[833], HowmuchKeysData[2869], HowmuchKeysData[3397], HowmuchKeysData[516], HowmuchKeysData[2212], HowmuchKeysData[946], HowmuchKeysData[979], HowmuchKeysData[576], HowmuchKeysData[2245], HowmuchKeysData[2182], HowmuchKeysData[1553], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys0fcbb5923e8e5224dc221ace153706d0(HowmuchKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { HowmuchKeysData[3224], HowmuchKeysData[2727], HowmuchKeysData[1485], HowmuchKeysData[1571], HowmuchKeysData[1776], HowmuchKeysData[267], HowmuchKeysData[4287], HowmuchKeysData[495], HowmuchKeysData[1827], HowmuchKeysData[579], HowmuchKeysData[1307], HowmuchKeysData[4500], HowmuchKeysData[4155], HowmuchKeysData[762], HowmuchKeysData[3736], HowmuchKeysData[4025], HowmuchKeysData[2735], HowmuchKeysData[2689], HowmuchKeysData[107], HowmuchKeysData[797], HowmuchKeysData[873], HowmuchKeysData[2113], HowmuchKeysData[2299], HowmuchKeysData[937], HowmuchKeysData[105], HowmuchKeysData[596], HowmuchKeysData[2500], HowmuchKeysData[4152], HowmuchKeysData[855], HowmuchKeysData[1654], HowmuchKeysData[464], HowmuchKeysData[1562], HowmuchKeysData[925], HowmuchKeysData[2682], HowmuchKeysData[3344], HowmuchKeysData[561], HowmuchKeysData[360], HowmuchKeysData[4221], HowmuchKeysData[2788], HowmuchKeysData[4069], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}

static NSString *_podKeys89ea18077626ea9c967643acff3abc36(HowmuchKeys *self, SEL _cmd)
{
  
    
      char cString[41] = { HowmuchKeysData[3931], HowmuchKeysData[2403], HowmuchKeysData[2231], HowmuchKeysData[1468], HowmuchKeysData[3578], HowmuchKeysData[3896], HowmuchKeysData[2890], HowmuchKeysData[2806], HowmuchKeysData[1350], HowmuchKeysData[1817], HowmuchKeysData[996], HowmuchKeysData[3959], HowmuchKeysData[1092], HowmuchKeysData[4316], HowmuchKeysData[1819], HowmuchKeysData[351], HowmuchKeysData[1655], HowmuchKeysData[1087], HowmuchKeysData[1673], HowmuchKeysData[1795], HowmuchKeysData[1737], HowmuchKeysData[2453], HowmuchKeysData[3999], HowmuchKeysData[2690], HowmuchKeysData[3997], HowmuchKeysData[1645], HowmuchKeysData[2726], HowmuchKeysData[3698], HowmuchKeysData[983], HowmuchKeysData[2563], HowmuchKeysData[4427], HowmuchKeysData[3598], HowmuchKeysData[1279], HowmuchKeysData[3136], HowmuchKeysData[813], HowmuchKeysData[2007], HowmuchKeysData[3831], HowmuchKeysData[1813], HowmuchKeysData[3741], HowmuchKeysData[1769], '\0' };
    
    return [NSString stringWithCString:cString encoding:NSUTF8StringEncoding];
  
}


static char HowmuchKeysData[4550] = "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\\\"";

- (NSString *)description
{
  return [@{
            @"twitterConsumerKey": self.twitterConsumerKey,
            @"twitterConsumerSecret": self.twitterConsumerSecret,
            @"parseClientId": self.parseClientId,
            @"parseClientKey": self.parseClientKey,
  } description];
}

- (id)debugQuickLookObject
{
  return [self description];
}

@end
